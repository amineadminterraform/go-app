{
    "swagger": "2.0",
    "info": {
        "description": "A PLATFORM OPERATIONS API in golang using Gin framework",
        "title": "PLATFORM OPERATIONS API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/",
    "paths": {
        "/project": {
            "post": {
                "description": "Create a project and saves it in postgresql",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new project",
                "parameters": [
                    {
                        "description": "Create project",
                        "name": "tags",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SwaggerProject"
                        }
                    }
                }
            }
        },
        "/project/{id}": {
            "get": {
                "description": "Get a project according to their ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "Get a project from postgresql",
                "produces": [
                    "application/json"
                ],
                "summary": "delete a project with a specified id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "patch": {
                "description": "update a project from postgresql",
                "produces": [
                    "application/json"
                ],
                "summary": "update a project with a specified id",
                "parameters": [
                    {
                        "description": "update project",
                        "name": "tags",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateProjectRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/projects": {
            "get": {
                "description": "List projects according to the page_id and page_size",
                "produces": [
                    "application/json"
                ],
                "summary": "List all projects",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page ID",
                        "name": "page_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page Size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "api.CreateProjectRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "git_path": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.SwaggerProject": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Use time.Time instead of pgtype.Timestamptz",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "git_path": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.UpdateProjectRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "git_path": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}